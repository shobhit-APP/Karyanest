name: Build and Deploy JAR App to DigitalOcean Droplet

on:
  push:
    branches:
      - master
  workflow_dispatch:

env:
  DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
  DB_DRIVER_CLASS_NAME: com.mysql.cj.jdbc.Driver
  DROPLET_PASSWORD: ${{ secrets.DROPLET_PASSWORD }}
  FIREBASE_CLIENT_EMAIL: ${{ secrets.FIREBASE_CLIENT_EMAIL }}
  FIREBASE_CLIENT_ID: ${{ secrets.FIREBASE_CLIENT_ID }}
  FIREBASE_PRIVATE_KEY: ${{ secrets.FIREBASE_PRIVATE_KEY }}
  FIREBASE_PRIVATE_KEY_ID: ${{ secrets.FIREBASE_PRIVATE_KEY_ID }}
  FIREBASE_PROJECT_ID: ${{ secrets.FIREBASE_PROJECT_ID }}
  MAIL_PASSWORD: ${{ secrets.MAIL_PASSWORD }}
  PERMISSION_SECRET_KEY: ${{ secrets.PERMISSION_SECRET_KEY }}

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Cache Maven dependencies
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven-

      - name: Build with Maven
        run: mvn clean test install

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: java-app
          path: karyanestApplication/target/karyanestApplication.jar
          if-no-files-found: error

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: Production

    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: java-app

      - name: Verify JAR file
        run: |
          if [ ! -f karyanestApplication.jar ]; then
            echo "Error: JAR file not found!"
            exit 1
          fi

      - name: Deploy to DigitalOcean
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.DROPLET_HOST }}
          username: deployer
          password: ${{ secrets.DROPLET_PASSWORD }}
          source: "karyanestApplication.jar"
          target: "/home/deployer/app/"

      - name: Start application
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.DROPLET_HOST }}
          username: deployer
          password: ${{ secrets.DROPLET_PASSWORD }}
          script: |
            # Create app directory if it doesn't exist
            mkdir -p /home/deployer/app
            cd /home/deployer/app

            # Stop old JAR process (if running)
            echo "Stopping old JAR process (if running)..."
            if [ -f app.pid ]; then
              kill $(cat app.pid) || echo "No old JAR process found."
              rm app.pid
            fi

            # Set environment variables for the application
            export DB_PASSWORD="${{ secrets.DB_PASSWORD }}"
            export DB_DRIVER_CLASS_NAME="${{ env.DB_DRIVER_CLASS_NAME }}"
            export FIREBASE_CLIENT_EMAIL="${{ secrets.FIREBASE_CLIENT_EMAIL }}"
            export FIREBASE_CLIENT_ID="${{ secrets.FIREBASE_CLIENT_ID }}"
            export FIREBASE_PRIVATE_KEY="${{ secrets.FIREBASE_PRIVATE_KEY }}"
            export FIREBASE_PRIVATE_KEY_ID="${{ secrets.FIREBASE_PRIVATE_KEY_ID }}"
            export FIREBASE_PROJECT_ID="${{ secrets.FIREBASE_PROJECT_ID }}"
            export MAIL_PASSWORD="${{ secrets.MAIL_PASSWORD }}"
            export PERMISSION_SECRET_KEY="${{ secrets.PERMISSION_SECRET_KEY }}"

            # Start new JAR
            echo "Starting new JAR..."
            nohup java -jar karyanestApplication.jar > app.log 2>&1 & echo $! > app.pid

            # Wait for the application to start
            sleep 10

            # Check if the process is running
            if ps -p $(cat app.pid) > /dev/null; then
              echo "✅ Application started successfully."
              cat app.log | grep -v "password\\|secret"
            else
              echo "❌ Failed to start application. Check logs:"
              cat app.log
              exit 1
            fi